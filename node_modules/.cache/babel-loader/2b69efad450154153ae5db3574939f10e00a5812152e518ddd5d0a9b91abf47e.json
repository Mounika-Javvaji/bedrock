{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mounika Reddy\\\\Desktop\\\\testingbedrock\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const API_ENDPOINT = \"https://vfy6wuhri3.execute-api.us-east-1.amazonaws.com/prod\";\n  const handleSend = async () => {\n    if (!userInput.trim()) return;\n    const userMessage = {\n      role: 'user',\n      text: userInput\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await fetch(API_ENDPOINT, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: userInput\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        role: 'bot',\n        text: data.response || \"No response from bot.\"\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        text: 'Error: Failed to get response.'\n      }]);\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.role}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSend(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HfxAD2MO2c7ZhY4vijqw2/NvqkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","userInput","setUserInput","API_ENDPOINT","handleSend","trim","userMessage","role","text","response","fetch","method","headers","body","JSON","stringify","prompt","data","json","botMessage","prev","error","console","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mounika Reddy/Desktop/testingbedrock/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const API_ENDPOINT = \"https://vfy6wuhri3.execute-api.us-east-1.amazonaws.com/prod\";\n\n  const handleSend = async () => {\n    if (!userInput.trim()) return;\n\n    const userMessage = { role: 'user', text: userInput };\n    setMessages([...messages, userMessage]);\n\n    try {\n      const response = await fetch(API_ENDPOINT, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: userInput })\n      });\n\n      const data = await response.json();\n      const botMessage = { role: 'bot', text: data.response || \"No response from bot.\" };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, { role: 'bot', text: 'Error: Failed to get response.' }]);\n    }\n\n    setUserInput('');\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`chat-message ${msg.role}`}>\n            <span>{msg.text}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={e => setUserInput(e.target.value)}\n          onKeyDown={e => e.key === 'Enter' && handleSend()}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}